# CH12 구현 문제
# 15 특정 거리의 도시 찾기 

from collections import deque

# N : 도시의 개수
# M : 도로의 개수
# K : 거리 정보
# X : 출발 도시의 번호 
N, M, K, X = map(int, input().split()) 

# graph : 도시 맵 정보
graph = [[] for _ in range(N+1)] 

for _ in range(M):
    # A번 도시에서 B번 도시까지의 단방향
    A, B = map(int, input().split())
    graph[A].append(B)

# 모든 도시에 대한 최단 거리 정보
distance = [-1] * (N+1) 

# bfs 탐색 수행
q = deque([X]) 
while q:
    now = q.popleft() 
    for next_node in graph[now]:
        if distance[next_node] == -1:
            distance[next_node] = distance[now] + 1
            q.append(next_node) 

check = False 
for i in range(1, N+1):
    if distance[i] == K:
        print(i) 
        check = True 

if check == False:
    print(-1) 


##################################################
[입력 예시1] 
4 4 2 1
1 2
1 3 
2 3 
2 4

[출력 예시1]
4


##################################################
[입력 예시2] 
4 3 2 1
1 2
1 3  
1 4

[출력 예시2]
-1


##################################################
[입력 예시3] 
4 4 1 1
1 2
1 3 
2 3 
2 4


[출력 예시3]
2
3
